clients:
    # Type
    type: simple

    # The total number of clients
    total_clients: 100

    # The number of clients selected in each round
    per_round: 10

    # Should the clients compute test accuracy locally?
    do_test: false

    # Whether client heterogeneity should be simulated
    speed_simulation: true

    # The simulation distribution
    simulation_distribution:
        distribution: pareto
        alpha: 1
    max_sleep_time: 10
    sleep_simulation: true
    avg_training_time: 10

    random_seed: 1

server:
    address: 127.0.0.1
    port: 8000
    synchronous: false
    simulate_wall_time: true

    # Parameters for FedAsync
    staleness_bound: 1000 # FedAsync doesn't have any staleness bound
    minimum_clients_aggregated: 5
    mixing_hyperparameter: 0.9
    adaptive_mixing: true
    staleness_weighting_function:
        type: Polynomial
        a: 2

    checkpoint_path: models/fedasync/mnist
    model_path: models/fedasync/mnist

data:
    # The training and testing dataset
    datasource: CIFAR10

    # Number of samples in each partition
    partition_size: 200

    # IID or non-IID?
    sampler: noniid

    concentration: 0.1

    # The random seed for sampling data
    random_seed: 1

trainer:
     # The type of the trainer
    type: basic

    # The maximum number of training rounds
    rounds: 200

    # The target accuracy
    target_accuracy: 1

    # The machine learning model
    model_name: resnet_18

    # Number of epoches for local training in each communication round
    epochs: 10
    batch_size: 10
    optimizer: SGD
    lr_scheduler: LambdaLR

algorithm:
    # Aggregation algorithm
    type: fedavg

parameters:
    optimizer:
        lr: 0.1
        momentum: 0.9
        weight_decay: 0.0001

    learning_rate:
        gamma: 0.1
        milestone_steps: 80ep,120ep

results:
    result_path: results/fedasync/mnist
    # Write the following parameter(s) into a CSV
    types: round, elapsed_time, accuracy
